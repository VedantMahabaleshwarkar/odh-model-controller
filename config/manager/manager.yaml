apiVersion: apps/v1
kind: Deployment
metadata:
  name: odh-model-controller
  labels:
    control-plane: odh-model-controller
    app: odh-model-controller
spec:
  selector:
    matchLabels:
      control-plane: odh-model-controller
  replicas: 3
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: odh-model-controller
        app: odh-model-controller
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: control-plane
                      operator: In
                      values:
                        - odh-model-controller
                topologyKey: kubernetes.io/hostname
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      initContainers: 
        - name: remove-deprecated-model-monitoring-stack
          image: registry.redhat.io/openshift4/ose-cli@sha256:25fef269ac6e7491cb8340119a9b473acbeb53bc6970ad029fdaae59c3d0ca61
          command: ["/bin/bash", "-c", "--"]
          args:
            - |
              #check if namespace redhat-ods-monitoring exists 
              moinitoringnamespaceexists = $(oc get project redhat-ods-monitoring | grep redhat-ods-monitoring || echo "false")
              if [[ $moinitoringnamespaceexists != "false" ]]; then

                #delete prometheus operator deployment
                prometheusoperatordeploymentexists=$(oc get deployments -o name -n redhat-ods-monitoring | grep rhods-prometheus-operator || echo "false")
                if [[ $prometheusoperatordeploymentexists != "false" ]]; then
                  echo "deleting prometheus operator deployment for deprecated model monitoring stack"
                  oc delete deployment rhods-prometheus-operator -n redhat-ods-monitoring
                fi 

                #delete prometheus statefulset
                prometheusstatefulsetexists=$(oc get statefulsets -o name -n redhat-ods-monitoring | grep prometheus-rhods-model-monitoring || echo "false")
                if [[ $prometheusstatefulsetexists != "false" ]]; then
                  echo "deleting prometheus operator deployment for deprecated model monitoring stack"
                  oc delete statefulset prometheus-rhods-model-monitoring -n redhat-ods-monitoring
                fi 

                #delete servicemonitor
                federatedmetricsservicemonitorexists=$(oc get servicemonitors -o name -n redhat-ods-monitoring | grep modelmesh-federated-metrics || echo "false")
                if [[ $federatedmetricsservicemonitorexists != "false" ]]; then
                  echo "deleting prometheus operator deployment for deprecated model monitoring stack"
                  oc delete servicemonitor modelmesh-federated-metrics -n redhat-ods-monitoring
                fi
              fi
              # if namespace redhat-ods-monitoring does not exist, do nothing  
      containers:        
        - command:
            - /manager
          args:
            - --leader-elect
          image: controller:latest
          name: manager
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          # TODO(user): Configure the resources accordingly based on the project requirements.
          # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 10m
              memory: 64Mi
      serviceAccountName: odh-model-controller
      terminationGracePeriodSeconds: 10
